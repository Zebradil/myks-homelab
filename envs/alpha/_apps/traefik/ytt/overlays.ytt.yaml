#@ load("@ytt:data", "data")
#@ load("@ytt:overlay", "overlay")

#@ deployments = overlay.subset({"kind":"Deployment"})
#@ daemonsets = overlay.subset({"kind":"DaemonSet"})
#@ base_domain = data.values.environment.traefik.hosts.web[0]

#! This overlay adds a custom command to the traefik container and removes the
#! ports field from the container spec, as it is not needed when using hostNetwork.
#@overlay/match by=overlay.or_op(deployments, daemonsets)
---
spec:
  template:
    spec:
      containers:
        #@overlay/match by="name"
        - name: traefik
          #@overlay/match missing_ok=True
          #@yaml/text-templated-strings
          command:
            - sh
            - -c
            - |
              # Get the IPv6 address of the node and use it in the traefik command
              # to bind to this exact address, leaving ports available for other endpoints.
              set -euo pipefail
              NODE_IPV6=$( \
                nslookup -type=aaaa $HOSTNAME.(@= base_domain @) 1.1.1.1 \
                | grep '^Address:' \
                | tail -1 \
                | cut -d' ' -f2)
              echo "Selected IPv6: $NODE_IPV6"
              ARGS=""
              for arg in "$@"; do
                ARGS="${ARGS} ${arg/\$NODE_IPV6/$NODE_IPV6}"
              done
              exec $0 $ARGS
            #! Pass an additional argument that takes the place of $0 in the script above.
            #! This is necessary because the `for arg in "$@"` loop will not include the
            #! command name itself (will skip the first argument from the `arguments` list).
            - /entrypoint.sh
          #@overlay/remove
          ports:
