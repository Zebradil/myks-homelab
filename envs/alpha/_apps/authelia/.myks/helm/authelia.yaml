versionOverride: ""
kubeVersionOverride: ""
image:
  registry: ghcr.io
  repository: authelia/authelia
  tag: ""
  pullPolicy: IfNotPresent
  pullSecrets: []
annotations: {}
labels: {}
rbac:
  enabled: false
  annotations: {}
  labels: {}
  serviceAccountName: authelia
domain: example.com
service:
  annotations: {}
  labels: {}
  port: 80
ingress:
  enabled: false
  annotations: {}
  labels: {}
  certManager: false
  rewriteTarget: true
  subdomain: auth
  tls:
    enabled: true
    secret: authelia-tls
  traefikCRD:
    enabled: false
    disableIngressRoute: false
    entryPoints: []
    sticky: false
    middlewares:
      auth:
        authResponseHeaders:
        - Remote-User
        - Remote-Name
        - Remote-Email
        - Remote-Groups
      chains:
        auth:
          before: []
          after: []
        ingressRoute:
          before: []
          after: []
    tls:
      disableTLSOptions: false
      options:
        nameOverride: ""
        minVersion: VersionTLS12
        maxVersion: VersionTLS13
        sniStrict: false
        cipherSuites:
        - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
        - TLS_RSA_WITH_AES_256_GCM_SHA384
        curvePreferences: []
pod:
  kind: StatefulSet
  annotations: {}
  labels: {}
  replicas: 1
  revisionHistoryLimit: 5
  priorityClassName: ""
  strategy:
    type: RollingUpdate
  securityContext:
    container: {}
    pod: {}
  tolerations: []
  selectors:
    nodeSelector: {}
    affinity:
      nodeAffinity: {}
      podAffinity: {}
      podAntiAffinity: {}
  env: []
  resources:
    limits: {}
    requests: {}
  probes:
    method:
      httpGet:
        path: /api/health
        port: http
        scheme: HTTP
    liveness:
      initialDelaySeconds: 0
      periodSeconds: 30
      timeoutSeconds: 5
      successThreshold: 1
      failureThreshold: 5
    readiness:
      initialDelaySeconds: 0
      periodSeconds: 5
      timeoutSeconds: 5
      successThreshold: 1
      failureThreshold: 5
    startup:
      initialDelaySeconds: 10
      periodSeconds: 5
      timeoutSeconds: 5
      successThreshold: 1
      failureThreshold: 6
  extraVolumeMounts: []
  extraVolumes: []
podDisruptionBudget:
  enabled: false
  annotations: {}
  labels: {}
  minAvailable: 0
  maxUnavailable: 0
networkPolicy:
  enabled: false
  annotations: {}
  labels: {}
  policyTypes:
  - Ingress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          authelia.com/network-policy: namespace
    - podSelector:
        matchLabels:
          authelia.com/network-policy: pod
    ports:
    - protocol: TCP
      port: 9091
configMap:
  enabled: true
  annotations: {}
  labels: {}
  key: configuration.yaml
  existingConfigMap: ""
  server:
    port: 9091
    path: ""
    asset_path: ""
    headers:
      csp_template: ""
    buffers:
      read: 4096
      write: 4096
    timeouts:
      read: 6s
      write: 6s
      idle: 30s
  log:
    level: info
    format: text
    file_path: ""
  telemetry:
    metrics:
      enabled: false
      port: 9959
      buffers:
        read: 4096
        write: 4096
      timeouts:
        read: 6s
        write: 6s
        idle: 30s
      serviceMonitor:
        enabled: false
        annotations: {}
        labels: {}
  default_redirection_url: ""
  default_2fa_method: ""
  theme: light
  totp:
    disable: false
    issuer: ""
    algorithm: sha1
    digits: 6
    period: 30
    skew: 1
    secret_size: 32
  webauthn:
    disable: false
    timeout: 60s
    display_name: Authelia
    attestation_conveyance_preference: indirect
    user_verification: preferred
  ntp:
    address: time.cloudflare.com:123
    version: 4
    max_desync: 3s
    disable_startup_check: false
    disable_failure: false
  duo_api:
    enabled: false
    hostname: api-123456789.example.com
    integration_key: ABCDEF
    enable_self_enrollment: false
  authentication_backend:
    password_reset:
      disable: false
      custom_url: ""
    refresh_interval: 5m
    ldap:
      enabled: false
      implementation: activedirectory
      url: ldap://openldap.default.svc.cluster.local
      timeout: 5s
      start_tls: false
      tls:
        server_name: ""
        skip_verify: false
        minimum_version: TLS1.2
        maximum_version: TLS1.3
      base_dn: DC=example,DC=com
      username_attribute: ""
      additional_users_dn: OU=Users
      users_filter: ""
      additional_groups_dn: OU=Groups
      groups_filter: ""
      group_name_attribute: ""
      mail_attribute: ""
      display_name_attribute: ""
      permit_referrals: false
      permit_unauthenticated_bind: false
      permit_feature_detection_failure: false
      user: CN=Authelia,DC=example,DC=com
    file:
      enabled: true
      path: /config/users_database.yml
      watch: true
      search:
        email: false
        case_insensitive: false
      password:
        algorithm: argon2
        argon2:
          variant: argon2id
          iterations: 3
          memory: 65536
          parallelism: 4
          key_length: 32
          salt_length: 16
        scrypt:
          iterations: 16
          block_size: 8
          parallelism: 1
          key_length: 32
          salt_length: 16
        pbkdf2:
          variant: sha512
          iterations: 310000
          salt_length: 16
        sha2crypt:
          variant: sha512
          iterations: 50000
          salt_length: 16
        bcrypt:
          variant: standard
          cost: 12
  password_policy:
    standard:
      enabled: false
      min_length: 8
      max_length: 0
      require_uppercase: true
      require_lowercase: true
      require_number: true
      require_special: true
    zxcvbn:
      enabled: false
      min_score: 0
  access_control:
    secret:
      enabled: false
      key: configuration.acl.yaml
      existingSecret: ""
    default_policy: deny
    networks: []
    rules: []
  session:
    name: authelia_session
    same_site: lax
    expiration: 1h
    inactivity: 5m
    remember_me_duration: 1M
    redis:
      enabled: false
      enabledSecret: false
      host: redis.databases.svc.cluster.local
      port: 6379
      username: ""
      database_index: 0
      maximum_active_connections: 8
      minimum_idle_connections: 0
      tls:
        enabled: false
        server_name: ""
        skip_verify: false
        minimum_version: TLS1.2
        maximum_version: TLS1.3
      high_availability:
        enabled: false
        enabledSecret: false
        sentinel_name: mysentinel
        username: ""
        nodes: []
        route_by_latency: false
        route_randomly: false
  regulation:
    max_retries: 3
    find_time: 2m
    ban_time: 5m
  storage:
    local:
      enabled: true
      path: /config/db.sqlite3
    mysql:
      enabled: false
      host: mysql.databases.svc.cluster.local
      port: 3306
      database: authelia
      username: authelia
      timeout: 5s
      tls:
        enabled: false
        server_name: ""
        skip_verify: false
        minimum_version: TLS1.2
        maximum_version: TLS1.3
    postgres:
      enabled: false
      host: postgres.databases.svc.cluster.local
      port: 5432
      database: authelia
      schema: public
      username: authelia
      timeout: 5s
      tls:
        enabled: false
        server_name: ""
        skip_verify: false
        minimum_version: TLS1.2
        maximum_version: TLS1.3
  notifier:
    disable_startup_check: false
    filesystem:
      enabled: true
      filename: /config/notification.txt
    smtp:
      enabled: false
      enabledSecret: false
      host: smtp.mail.svc.cluster.local
      port: 25
      timeout: 5s
      username: test
      sender: admin@example.com
      identifier: localhost
      subject: '[Authelia] {title}'
      startup_check_address: test@authelia.com
      disable_html_emails: false
      disable_require_tls: false
      disable_starttls: false
      tls:
        server_name: ""
        skip_verify: false
        minimum_version: TLS1.2
        maximum_version: TLS1.3
  identity_providers:
    oidc:
      enabled: false
      access_token_lifespan: 1h
      authorize_code_lifespan: 1m
      id_token_lifespan: 1h
      refresh_token_lifespan: 90m
      enforce_pkce: public_clients_only
      enable_pkce_plain_challenge: false
      minimum_parameter_entropy: 8
      enable_client_debug_messages: false
      issuer_certificate_chain: ""
      cors:
        endpoints: []
        allowed_origins: []
        allowed_origins_from_client_redirect_uris: true
      clients: []
secret:
  existingSecret: ""
  annotations: {}
  labels: {}
  mountPath: /secrets
  excludeVolumeAndMounts: false
  jwt:
    key: JWT_TOKEN
    value: ""
    filename: JWT_TOKEN
  ldap:
    key: LDAP_PASSWORD
    value: ""
    filename: LDAP_PASSWORD
  storage:
    key: STORAGE_PASSWORD
    value: ""
    filename: STORAGE_PASSWORD
  storageEncryptionKey:
    key: STORAGE_ENCRYPTION_KEY
    value: ""
    filename: STORAGE_ENCRYPTION_KEY
  session:
    key: SESSION_ENCRYPTION_KEY
    value: ""
    filename: SESSION_ENCRYPTION_KEY
  duo:
    key: DUO_API_KEY
    value: ""
    filename: DUO_API_KEY
  redis:
    key: REDIS_PASSWORD
    value: ""
    filename: REDIS_PASSWORD
  redisSentinel:
    key: REDIS_SENTINEL_PASSWORD
    value: ""
    filename: REDIS_SENTINEL_PASSWORD
  smtp:
    key: SMTP_PASSWORD
    value: ""
    filename: SMTP_PASSWORD
  oidcPrivateKey:
    key: OIDC_PRIVATE_KEY
    value: ""
    filename: OIDC_PRIVATE_KEY
  oidcHMACSecret:
    key: OIDC_HMAC_SECRET
    value: ""
    filename: OIDC_HMAC_SECRET
  vaultInjector:
    enabled: false
    role: authelia
    agent:
      status: update
      configMap: ""
      image: ""
      initFirst: "false"
      command: sh -c 'kill HUP $(pidof authelia)'
      runAsSameUser: "true"
    secrets:
      jwt:
        path: secrets/authelia/jwt:token
        templateValue: ""
        command: ""
      ldap:
        path: secrets/authelia/ldap:password
        templateValue: ""
        command: ""
      storage:
        path: secrets/authelia/storage:password
        templateValue: ""
        command: ""
      storageEncryptionKey:
        path: secrets/authelia/storage:encryption_key
        templateValue: ""
        command: ""
      session:
        path: secrets/authelia/session:encryption_key
        templateValue: ""
        command: ""
      duo:
        path: secrets/authelia/duo:api_key
        templateValue: ""
        command: ""
      redis:
        path: secrets/authelia/redis:password
        templateValue: ""
        command: ""
      redisSentinel:
        path: secrets/authelia/redis_sentinel:password
        templateValue: ""
        command: ""
      smtp:
        path: secrets/authelia/smtp:password
        templateValue: ""
        command: ""
      oidcPrivateKey:
        path: secrets/authelia/oidc:private_key
        templateValue: ""
        command: ""
      oidcHMACSecret:
        path: secrets/authelia/oidc:hmac_secret
        templateValue: ""
        command: ""
certificates:
  existingSecret: ""
  annotations: {}
  labels: {}
  values: []
persistence:
  enabled: false
  annotations: {}
  labels: {}
  readOnly: false
  subPath: ""
  existingClaim: ""
  storageClass: ""
  volumeName: ""
  accessModes:
  - ReadWriteOnce
  size: 100Mi
  selector: {}
