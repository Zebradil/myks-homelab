#@ load("@ytt:data", "data")

#@ d = data.values
#@ ap = d.application.filebrowser
#@ name = d.myks.context.app + "-filebrowser"

#@ media_name = d.myks.context.app + "-media"

#@ if ap.enabled:

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: #@ name + "-db"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: #@ name
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: #@ name
  template:
    metadata:
      labels:
        app: #@ name
    spec:
      containers:
        - name: filebrowser
          image: #@ ap.image
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - name: database
              mountPath: /database
            - name: jellyfin-media
              mountPath: /srv/media
          livenessProbe:
            httpGet:
              path: /health
              port: http
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: http
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /health
              port: http
            failureThreshold: 30
            periodSeconds: 5
      volumes:
        - name: database
          persistentVolumeClaim:
            claimName: #@ name + "-db"
        - name: jellyfin-media
          persistentVolumeClaim:
            claimName: #@ media_name

---
apiVersion: v1
kind: Service
metadata:
  name: #@ name
spec:
  ports:
    - name: http
      port: 80
      targetPort: http
  selector:
    app: #@ name

#@ end
