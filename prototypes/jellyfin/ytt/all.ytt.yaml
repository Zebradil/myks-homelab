#@ load("@ytt:data", "data")
#@ load("util.star", "util")

#@ d = data.values
#@ ap = d.application
#@ name = d.myks.context.app
#@ host = name + "." + d.environment.host
#@ pvc_config_name = name + "-config"
#@ pvc_media_name = name + "-media"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: #@ pvc_config_name
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: #@ pvc_media_name
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# Source: jellyfin/templates/common.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-jellyfin
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: jellyfin
    app.kubernetes.io/version: 10.8.1
    helm.sh/chart: jellyfin-9.5.3
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 8096
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: jellyfin
    app.kubernetes.io/instance: release-name
---
# Source: jellyfin/templates/common.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-jellyfin
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: jellyfin
    app.kubernetes.io/version: 10.8.1
    helm.sh/chart: jellyfin-9.5.3
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: jellyfin
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jellyfin
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: default
      automountServiceAccountToken: true
      securityContext:
        supplementalGroups:
          - 44
          - 109
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      containers:
        - name: release-name-jellyfin
          image: "jellyfin/jellyfin:10.8.1"
          imagePullPolicy: IfNotPresent
          env:
            - name: TZ
              value: UTC
          ports:
            - name: http
              containerPort: 8096
              protocol: TCP
          volumeMounts:
            - name: cache
              mountPath: /cache
            - name: config
              mountPath: /config
            - name: media
              mountPath: /media
          livenessProbe:
            tcpSocket:
              port: 8096
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 8096
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          startupProbe:
            tcpSocket:
              port: 8096
            initialDelaySeconds: 0
            failureThreshold: 30
            timeoutSeconds: 1
            periodSeconds: 5
      volumes:
        - name: cache
          persistentVolumeClaim:
            claimName: release-name-jellyfin-cache
        - name: config
          persistentVolumeClaim:
            claimName: release-name-jellyfin-config
        - name: media
          persistentVolumeClaim:
            claimName: release-name-jellyfin-media
