apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    a8r.io/repository: https://github.com/Zebradil/myks-homelab
    kbld.k14s.io/images: |
      - origins:
        - resolved:
            tag: release-4.6.4
            url: ghcr.io/hotio/qbittorrent:release-4.6.4
        - preresolved:
            url: ghcr.io/hotio/qbittorrent@sha256:39829b3e092a91fb15f6696d5a8b762a2da6436ff59e529e13305e6bfb52f829
        url: ghcr.io/hotio/qbittorrent@sha256:39829b3e092a91fb15f6696d5a8b762a2da6436ff59e529e13305e6bfb52f829
      - origins:
        - resolved:
            tag: v1.0.20210914-ls31
            url: ghcr.io/linuxserver/wireguard:v1.0.20210914-ls31
        - preresolved:
            url: ghcr.io/linuxserver/wireguard@sha256:c417568c79a051a8a73ffc2ad28ef58f58ba76bdb4c420389819c001aa55a03e
        url: ghcr.io/linuxserver/wireguard@sha256:c417568c79a051a8a73ffc2ad28ef58f58ba76bdb4c420389819c001aa55a03e
      - origins:
        - resolved:
            tag: v2.44.0
            url: filebrowser/filebrowser:v2.44.0
        - preresolved:
            url: index.docker.io/filebrowser/filebrowser@sha256:f63369420687482dfdf252f80ef675f44ca1d1cd3a631261fb424136214fe629
        url: index.docker.io/filebrowser/filebrowser@sha256:f63369420687482dfdf252f80ef675f44ca1d1cd3a631261fb424136214fe629
      - origins:
        - resolved:
            tag: 10.11.0
            url: jellyfin/jellyfin:10.11.0
        url: index.docker.io/jellyfin/jellyfin@sha256:59417f441213e236a9f907d4e71a13472042409d85f9e9310dbdd87ee33d7bd4
      - origins:
        - resolved:
            tag: 1.36.1
            url: busybox:1.36.1
        - preresolved:
            url: index.docker.io/library/busybox@sha256:1fcf5df59121b92d61e066df1788e8df0cc35623f5d62d9679a41e163b6a0cdb
        url: index.docker.io/library/busybox@sha256:1fcf5df59121b92d61e066df1788e8df0cc35623f5d62d9679a41e163b6a0cdb
  name: jellyfin
spec:
  selector:
    matchLabels:
      app: jellyfin
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: jellyfin
    spec:
      containers:
        - image: index.docker.io/jellyfin/jellyfin@sha256:59417f441213e236a9f907d4e71a13472042409d85f9e9310dbdd87ee33d7bd4
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: http
          name: jellyfin
          ports:
            - containerPort: 8096
              name: http
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: http
          securityContext:
            privileged: true
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: /health
              port: http
            periodSeconds: 5
          volumeMounts:
            - mountPath: /dev/dri/renderD128
              name: render-device
            - mountPath: /cache
              name: cache
            - mountPath: /config
              name: config
            - mountPath: /media
              name: media
        - env:
            - name: FB_DATABASE
              value: /database/database.db
          image: index.docker.io/filebrowser/filebrowser@sha256:f63369420687482dfdf252f80ef675f44ca1d1cd3a631261fb424136214fe629
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: http-fb
          name: filebrowser
          ports:
            - containerPort: 80
              name: http-fb
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: http-fb
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: /health
              port: http-fb
            periodSeconds: 5
          volumeMounts:
            - mountPath: /database
              name: filebrowser-db
            - mountPath: /srv/media
              name: media
        - env:
            - name: WEBUI_PORT
              value: "8080"
          image: ghcr.io/hotio/qbittorrent@sha256:39829b3e092a91fb15f6696d5a8b762a2da6436ff59e529e13305e6bfb52f829
          name: torrent
          ports:
            - containerPort: 8080
              name: http-tr
          volumeMounts:
            - mountPath: /data
              name: media
            - mountPath: /config
              name: torrent-config
      initContainers:
        - command:
            - sh
            - -c
            - echo "$WG0_CONF" > /config/wg0.conf
          env:
            - name: WG0_CONF
              valueFrom:
                secretKeyRef:
                  key: wg0.conf
                  name: jellyfin-wireguard-config
          image: index.docker.io/library/busybox@sha256:1fcf5df59121b92d61e066df1788e8df0cc35623f5d62d9679a41e163b6a0cdb
          name: wireguard-config
          volumeMounts:
            - mountPath: /config
              name: wireguard-config
        - env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: TZ
              value: Etc/UTC
          image: ghcr.io/linuxserver/wireguard@sha256:c417568c79a051a8a73ffc2ad28ef58f58ba76bdb4c420389819c001aa55a03e
          name: wireguard
          restartPolicy: Always
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
          volumeMounts:
            - mountPath: /config
              name: wireguard-config
      nodeName: junior
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
        supplementalGroups:
          - 105
      volumes:
        - hostPath:
            path: /dev/dri/renderD128
            type: CharDevice
          name: render-device
        - name: cache
          persistentVolumeClaim:
            claimName: jellyfin-cache
        - name: config
          persistentVolumeClaim:
            claimName: jellyfin-config
        - name: media
          persistentVolumeClaim:
            claimName: jellyfin-media
        - name: filebrowser-db
          persistentVolumeClaim:
            claimName: jellyfin-filebrowser-db
        - name: torrent-config
          persistentVolumeClaim:
            claimName: jellyfin-torrent-config
        - emptyDir: {}
          name: wireguard-config
