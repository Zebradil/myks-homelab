apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    a8r.io/repository: https://github.com/Zebradil/myks-homelab
    kbld.k14s.io/images: |
      - origins:
        - resolved:
            tag: v2.13.2
            url: goharbor/harbor-db:v2.13.2
        url: index.docker.io/goharbor/harbor-db@sha256:fcf1f3dbc8f10183abe336712560a94fb2804ba8d3ce3ca634342e5a8df7da2c
  labels:
    app: harbor
    app.kubernetes.io/component: database
    app.kubernetes.io/instance: harbor
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: harbor
    app.kubernetes.io/part-of: harbor
    chart: harbor
    component: database
    heritage: Helm
    release: harbor
  name: harbor-database
  namespace: harbor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: harbor
      component: database
      release: harbor
  serviceName: harbor-database
  template:
    metadata:
      annotations:
        checksum/secret: 4f658ff5ab4ddb0a6bce66e65de225ed18a17430bff8aea00a037d9d434730c3
      labels:
        app: harbor
        app.kubernetes.io/component: database
        app.kubernetes.io/instance: harbor
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: harbor
        app.kubernetes.io/part-of: harbor
        chart: harbor
        component: database
        heritage: Helm
        release: harbor
    spec:
      automountServiceAccountToken: false
      containers:
        - env:
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          envFrom:
            - secretRef:
                name: harbor-database
          image: index.docker.io/goharbor/harbor-db@sha256:fcf1f3dbc8f10183abe336712560a94fb2804ba8d3ce3ca634342e5a8df7da2c
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
                - /docker-healthcheck.sh
            initialDelaySeconds: 300
            periodSeconds: 10
            timeoutSeconds: 1
          name: database
          readinessProbe:
            exec:
              command:
                - /docker-healthcheck.sh
            initialDelaySeconds: 1
            periodSeconds: 10
            timeoutSeconds: 1
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: database-data
              subPath: null
            - mountPath: /dev/shm
              name: shm-volume
      initContainers:
        - args:
            - -c
            - chmod -R 700 /var/lib/postgresql/data/pgdata || true
          command:
            - /bin/sh
          image: index.docker.io/goharbor/harbor-db@sha256:fcf1f3dbc8f10183abe336712560a94fb2804ba8d3ce3ca634342e5a8df7da2c
          imagePullPolicy: IfNotPresent
          name: data-permissions-ensurer
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: database-data
              subPath: null
      securityContext:
        fsGroup: 999
        runAsUser: 999
      terminationGracePeriodSeconds: 120
      volumes:
        - emptyDir:
            medium: Memory
            sizeLimit: 512Mi
          name: shm-volume
  volumeClaimTemplates:
    - metadata:
        annotations: null
        labels:
          app: harbor
          chart: harbor
          heritage: Helm
          release: harbor
        name: database-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
