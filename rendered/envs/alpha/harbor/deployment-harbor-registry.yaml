apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    a8r.io/repository: https://github.com/Zebradil/myks-homelab
  labels:
    app: harbor
    app.kubernetes.io/component: registry
    app.kubernetes.io/instance: harbor
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: harbor
    app.kubernetes.io/part-of: harbor
    chart: harbor
    component: registry
    heritage: Helm
    release: harbor
  name: harbor-registry
  namespace: harbor
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: harbor
      component: registry
      release: harbor
  strategy:
    rollingUpdate: null
    type: Recreate
  template:
    metadata:
      annotations:
        checksum/configmap: 906772fb23280a104aaf4bc1cec7700895257cc3ebbea294a19ff1b1ac23931a
        checksum/secret: 6ea0d45895e01dd89fcc6ba9b31deb659bb9fea28604caebb0368e4be3e6231d
        checksum/secret-core: 4e10c99df42be36d600305e52ae0371aa10d08bfda5163055ab6f78167e67e75
        checksum/secret-jobservice: 587d8192c4a63ee015d60475e59bb3cff5559076ca3c1744b4e5c800d55b2102
      labels:
        app: harbor
        app.kubernetes.io/component: registry
        app.kubernetes.io/instance: harbor
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: harbor
        app.kubernetes.io/part-of: harbor
        chart: harbor
        component: registry
        heritage: Helm
        release: harbor
    spec:
      automountServiceAccountToken: false
      containers:
        - env: null
          envFrom:
            - secretRef:
                name: harbor-registry
          image: oci.zebradil.dev/index.docker.io-cache/goharbor/registry-photon@sha256:1fc840dda17e4bb99cb58edc2a4c2435b9413f770b9146ac716a4593061bc136
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /
              port: 5000
              scheme: HTTP
            initialDelaySeconds: 300
            periodSeconds: 10
          name: registry
          ports:
            - containerPort: 5000
            - containerPort: 8001
          readinessProbe:
            httpGet:
              path: /
              port: 5000
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 10
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /storage
              name: registry-data
              subPath: null
            - mountPath: /etc/registry/passwd
              name: registry-htpasswd
              subPath: passwd
            - mountPath: /etc/registry/config.yml
              name: registry-config
              subPath: config.yml
        - env:
            - name: CORE_SECRET
              valueFrom:
                secretKeyRef:
                  key: secret
                  name: harbor-core
            - name: JOBSERVICE_SECRET
              valueFrom:
                secretKeyRef:
                  key: JOBSERVICE_SECRET
                  name: harbor-jobservice
          envFrom:
            - configMapRef:
                name: harbor-registryctl
            - secretRef:
                name: harbor-registry
            - secretRef:
                name: harbor-registryctl
          image: oci.zebradil.dev/index.docker.io-cache/goharbor/harbor-registryctl@sha256:3d82ef5215c55953540aa08b460785f9d0457a10276365ab9f7750027609295b
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /api/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 300
            periodSeconds: 10
          name: registryctl
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /api/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 10
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /storage
              name: registry-data
              subPath: null
            - mountPath: /etc/registry/config.yml
              name: registry-config
              subPath: config.yml
            - mountPath: /etc/registryctl/config.yml
              name: registry-config
              subPath: ctl-config.yml
      securityContext:
        fsGroup: 10000
        fsGroupChangePolicy: OnRootMismatch
        runAsUser: 10000
      terminationGracePeriodSeconds: 120
      volumes:
        - name: registry-htpasswd
          secret:
            items:
              - key: REGISTRY_HTPASSWD
                path: passwd
            secretName: harbor-registry-htpasswd
        - configMap:
            name: harbor-registry
          name: registry-config
        - name: registry-data
          persistentVolumeClaim:
            claimName: harbor-registry
