apiVersion: v1
kind: ServiceAccount
metadata:
  name: httpbingo
  labels:
    helm.sh/chart: httpbingo-0.1.1
    app.kubernetes.io/name: httpbingo
    app.kubernetes.io/instance: httpbingo
    app.kubernetes.io/version: v2.2.2
    app.kubernetes.io/managed-by: Helm
  annotations:
    a8r.io/repository: https://github.com/Zebradil/myks-homelab
---
apiVersion: v1
kind: Service
metadata:
  name: httpbingo
  labels:
    helm.sh/chart: httpbingo-0.1.1
    app.kubernetes.io/name: httpbingo
    app.kubernetes.io/instance: httpbingo
    app.kubernetes.io/version: v2.2.2
    app.kubernetes.io/managed-by: Helm
  annotations:
    a8r.io/repository: https://github.com/Zebradil/myks-homelab
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: httpbingo
    app.kubernetes.io/instance: httpbingo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: httpbingo
  labels:
    helm.sh/chart: httpbingo-0.1.1
    app.kubernetes.io/name: httpbingo
    app.kubernetes.io/instance: httpbingo
    app.kubernetes.io/version: v2.2.2
    app.kubernetes.io/managed-by: Helm
  annotations:
    a8r.io/repository: https://github.com/Zebradil/myks-homelab
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: httpbingo
      app.kubernetes.io/instance: httpbingo
  template:
    metadata:
      labels:
        app.kubernetes.io/name: httpbingo
        app.kubernetes.io/instance: httpbingo
    spec:
      serviceAccountName: httpbingo
      securityContext: {}
      containers:
      - name: httpbingo
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        image: mccutchen/go-httpbin:v2.2.2
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: http
        readinessProbe:
          httpGet:
            path: /
            port: http
        resources: {}
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: httpbingo-protected
  annotations:
    a8r.io/repository: https://github.com/Zebradil/myks-homelab
spec:
  entryPoints:
  - web
  - websecure
  routes:
  - match: Host(`httpbingo.zebradil.dev`) || Host(`httpbingo.gray.zebradil.dev`) || Host(`httpbingo.junior.zebradil.dev`)
    kind: Rule
    middlewares:
    - name: chain-authelia-auth
      namespace: authelia
    services:
    - name: httpbingo
      port: http
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: httpbingo-lan
  annotations:
    a8r.io/repository: https://github.com/Zebradil/myks-homelab
spec:
  entryPoints:
  - lan-web
  - lan-websecure
  routes:
  - match: Host(`httpbingo.lan.zebradil.dev`) || Host(`httpbingo.gray.lan.zebradil.dev`) || Host(`httpbingo.junior.lan.zebradil.dev`)
    kind: Rule
    services:
    - name: httpbingo
      port: http
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: httpbingo-vpn
  annotations:
    a8r.io/repository: https://github.com/Zebradil/myks-homelab
spec:
  entryPoints:
  - vpn-web
  - vpn-websecure
  routes:
  - match: Host(`httpbingo.ts.zebradil.dev`) || Host(`httpbingo.gray.ts.zebradil.dev`) || Host(`httpbingo.junior.ts.zebradil.dev`)
    kind: Rule
    services:
    - name: httpbingo
      port: http
