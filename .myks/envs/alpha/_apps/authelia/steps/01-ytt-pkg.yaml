
---
---
# Source: authelia/templates/configMap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: authelia
  labels: 
    app.kubernetes.io/name: authelia
    app.kubernetes.io/instance: authelia
    app.kubernetes.io/version: 4.37.5
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: authelia-0.8.58
data:
  configuration.yaml: |
    ---
    theme: light
    default_redirection_url: https://www.zebradil.dev
    default_2fa_method: ''
    server:
      host: 0.0.0.0
      port: 9091
      asset_path: ''
      headers:
        csp_template: ''
      buffers:
        read: 4096
        write: 4096
      timeouts:
        read: 6s
        write: 6s
        idle: 30s
      enable_pprof: false
      enable_expvars: false
    log:
      level: info
      format: text
      file_path: ''
      keep_stdout: true
    totp:
      disable: false
      issuer: zebradil.dev
      algorithm: sha1
      digits: 6
      period: 30
      skew: 1
      secret_size: 32
    webauthn:
      disable: false
      display_name: Authelia
      attestation_conveyance_preference: indirect
      user_verification: preferred
      timeout: 60s
    ntp:
      address: time.cloudflare.com:123
      version: 4
      max_desync: 3s
      disable_startup_check: false
      disable_failure: false
    authentication_backend:
      password_reset:
        disable: false
        custom_url: ''
      file:
        path: /config/users_database.yml
        watch: true
        search:
          email: false
          case_insensitive: false
        password:
          algorithm: 'argon2'
          argon2:
            variant: 'argon2id'
            iterations: 3
            memory: 65536
            parallelism: 4
            key_length: 32
            salt_length: 16
          scrypt:
            iterations: 16
            block_size: 8
            parallelism: 1
            key_length: 32
            salt_length: 16
          pbkdf2:
            variant: 'sha512'
            iterations: 310000
            salt_length: 16
          sha2crypt:
            variant: 'sha512'
            iterations: 50000
            salt_length: 16
          bcrypt:
            variant: 'standard'
            cost: 12
    password_policy:
      standard:
        enabled: false
        min_length: 8
        max_length: 0
        require_uppercase: true
        require_lowercase: true
        require_number: true
        require_special: true
      zxcvbn:
        enabled: false
        min_score: 0
    session:
      name: 'authelia_session'
      domain: 'zebradil.dev'
      same_site: 'lax'
      expiration: 1h
      inactivity: 5m
      remember_me_duration: 1M
    regulation: 
      ban_time: 5m
      find_time: 2m
      max_retries: 3
    storage:
      local:
        path: /config/db.sqlite3
    notifier:
      disable_startup_check: false
      smtp:
        host: smtp.gmail.com
        port: 587
        timeout: 5s
        username: <path:static/smtp.sops.yaml#username>
        sender: authelia@mail.zebradil.dev
        identifier: localhost
        subject: '[Authelia] {title}'
        startup_check_address: test@authelia.com
        disable_html_emails: false
        disable_require_tls: false
        disable_starttls: false
        tls:
          server_name: smtp.gmail.com
          skip_verify: false
          minimum_version: TLS1.2
          maximum_version: TLS1.3
    access_control:
      default_policy: two_factor
    ...
---
# Source: authelia/templates/persistentVolumeClaim.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: authelia
  labels: 
    app.kubernetes.io/name: authelia
    app.kubernetes.io/instance: authelia
    app.kubernetes.io/version: 4.37.5
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: authelia-0.8.58
spec:
  accessModes: 
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# Source: authelia/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: authelia
  labels: 
    app.kubernetes.io/name: authelia
    app.kubernetes.io/instance: authelia
    app.kubernetes.io/version: 4.37.5
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: authelia-0.8.58
spec:
  type: ClusterIP
  sessionAffinity: None
  selector:
    app.kubernetes.io/name: authelia
    app.kubernetes.io/instance: authelia
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: http
---
# Source: authelia/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: authelia
  labels: 
    app.kubernetes.io/name: authelia
    app.kubernetes.io/instance: authelia
    app.kubernetes.io/version: 4.37.5
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: authelia-0.8.58
spec:
  selector:
    matchLabels: 
      app.kubernetes.io/name: authelia
      app.kubernetes.io/instance: authelia
  revisionHistoryLimit: 5
  replicas: 1
  minReadySeconds: 0
  strategy:
    type: RollingUpdate
    rollingUpdate: 
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      labels: 
        app.kubernetes.io/name: authelia
        app.kubernetes.io/instance: authelia
        app.kubernetes.io/version: 4.37.5
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: authelia-0.8.58
      annotations:
        checksum/config: 6e80215eb7b320069bce8eebf898ab7a0fa00fd77fab32fd0ea87d1f676b08c5
        
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      affinity: 
        nodeAffinity: {}
        podAffinity: {}
        podAntiAffinity: {}
      enableServiceLinks: false
      containers:
      - name: authelia
        image: ghcr.io/authelia/authelia:4.37.5
        imagePullPolicy: IfNotPresent
        command: ["authelia"]
        args:
        - --config=/configuration.yaml
        resources: 
          limits: {}
          requests: {}
        env:
        - name: AUTHELIA_SERVER_DISABLE_HEALTHCHECK
          value: "true"
        - name: AUTHELIA_JWT_SECRET_FILE
          value: /secrets/JWT_TOKEN
        - name: AUTHELIA_SESSION_SECRET_FILE
          value: /secrets/SESSION_ENCRYPTION_KEY
        - name: AUTHELIA_NOTIFIER_SMTP_PASSWORD_FILE
          value: /secrets/SMTP_PASSWORD
        - name: AUTHELIA_STORAGE_ENCRYPTION_KEY_FILE
          value: /secrets/STORAGE_ENCRYPTION_KEY
        startupProbe:
          failureThreshold: 6
          httpGet:
            path: /api/health
            port: http
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /api/health
            port: http
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /api/health
            port: http
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        ports:
        - name: http
          containerPort: 9091
          protocol: TCP
        volumeMounts:
        - mountPath: /config
          name: authelia
          readOnly: false
        - mountPath: /configuration.yaml
          name: config
          readOnly: true
          subPath: configuration.yaml
        - mountPath: /secrets
          name: secrets
          readOnly: true
      volumes:
      - name: authelia
        persistentVolumeClaim:
          claimName: authelia
      - name: config
        configMap:
          name: authelia
          items:
          - key: configuration.yaml
            path: configuration.yaml
      - name: secrets
        secret:
          secretName: authelia
          items:
          - key: JWT_TOKEN
            path: JWT_TOKEN
          - key: SESSION_ENCRYPTION_KEY
            path: SESSION_ENCRYPTION_KEY
          - key: STORAGE_ENCRYPTION_KEY
            path: STORAGE_ENCRYPTION_KEY
          - key: SMTP_PASSWORD
            path: SMTP_PASSWORD
---
# Source: authelia/templates/traefikCRD/ingressRoute.yaml
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: authelia
  labels: 
    app.kubernetes.io/name: authelia
    app.kubernetes.io/instance: authelia
    app.kubernetes.io/version: 4.37.5
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: authelia-0.8.58
spec:
  entryPoints:
    - websecure
  routes:
    - kind: Rule
      match: Host(`auth.zebradil.dev`) && PathPrefix(`/`)
      priority: 10
      middlewares:
        - name: chain-authelia
          namespace: authelia
      services:
        - kind: Service
          name: authelia
          port: 80
          namespace: authelia
          passHostHeader: true
          strategy: RoundRobin
          scheme: http
          weight: 10
          responseForwarding:
            flushInterval: 100ms
---
# Source: authelia/templates/traefikCRD/middlewares.yaml
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: forwardauth-authelia
  labels: 
    app.kubernetes.io/name: authelia
    app.kubernetes.io/instance: authelia
    app.kubernetes.io/version: 4.37.5
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: authelia-0.8.58
spec:
  forwardAuth:
    address: http://authelia.authelia.svc.cluster.local/api/verify?rd=https://auth.zebradil.dev/
    trustForwardHeader: true
    authResponseHeaders:
      - Remote-User
      - Remote-Name
      - Remote-Email
      - Remote-Groups
---
# Source: authelia/templates/traefikCRD/middlewares.yaml
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: headers-authelia
  labels: 
    app.kubernetes.io/name: authelia
    app.kubernetes.io/instance: authelia
    app.kubernetes.io/version: 4.37.5
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: authelia-0.8.58
spec:
  headers:
    browserXssFilter: true
    customFrameOptionsValue: "SAMEORIGIN"
    customResponseHeaders:
      Cache-Control: "no-store"
      Pragma: "no-cache"
---
# Source: authelia/templates/traefikCRD/middlewares.yaml
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: chain-authelia-auth
  labels: 
    app.kubernetes.io/name: authelia
    app.kubernetes.io/instance: authelia
    app.kubernetes.io/version: 4.37.5
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: authelia-0.8.58
spec:
  chain:
    middlewares:
      - name: forwardauth-authelia
        namespace: authelia
---
# Source: authelia/templates/traefikCRD/middlewares.yaml
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: chain-authelia
  labels:
    app.kubernetes.io/name: authelia
    app.kubernetes.io/instance: authelia
    app.kubernetes.io/version: 4.37.5
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: authelia-0.8.58
spec:
  chain:
    middlewares:
      - name: headers-authelia
        namespace: authelia

---
