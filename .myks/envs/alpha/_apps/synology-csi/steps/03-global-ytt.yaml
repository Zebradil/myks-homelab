apiVersion: v1
kind: ServiceAccount
metadata:
  name: csi-controller-sa
  namespace: synology-csi
  annotations:
    a8r.io/repository: https://github.com/Zebradil/myks-homelab
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: synology-csi-controller-role
  annotations:
    a8r.io/repository: https://github.com/Zebradil/myks-homelab
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims/status
  verbs:
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - storage.k8s.io
  resources:
  - csinodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - csi.storage.k8s.io
  resources:
  - csinodeinfos
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - storage.k8s.io
  resources:
  - volumeattachments
  - volumeattachments/status
  verbs:
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - snapshot.storage.k8s.io
  resources:
  - volumesnapshots
  verbs:
  - get
  - list
- apiGroups:
  - snapshot.storage.k8s.io
  resources:
  - volumesnapshotcontents
  verbs:
  - get
  - list
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: synology-csi-controller-role
  namespace: synology-csi
  annotations:
    a8r.io/repository: https://github.com/Zebradil/myks-homelab
subjects:
- kind: ServiceAccount
  name: csi-controller-sa
  namespace: synology-csi
roleRef:
  kind: ClusterRole
  name: synology-csi-controller-role
  apiGroup: rbac.authorization.k8s.io
---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: synology-csi-controller
  namespace: synology-csi
  annotations:
    a8r.io/repository: https://github.com/Zebradil/myks-homelab
spec:
  serviceName: synology-csi-controller
  replicas: 1
  selector:
    matchLabels:
      app: synology-csi-controller
  template:
    metadata:
      labels:
        app: synology-csi-controller
    spec:
      serviceAccountName: csi-controller-sa
      hostNetwork: true
      containers:
      - name: csi-provisioner
        securityContext:
          privileged: true
          capabilities:
            add:
            - SYS_ADMIN
          allowPrivilegeEscalation: true
        image: registry.k8s.io/sig-storage/csi-provisioner:v3.0.0
        args:
        - --timeout=60s
        - --csi-address=$(ADDRESS)
        - --v=5
        - --extra-create-metadata
        env:
        - name: ADDRESS
          value: /var/lib/csi/sockets/pluginproxy/csi.sock
        imagePullPolicy: Always
        volumeMounts:
        - name: socket-dir
          mountPath: /var/lib/csi/sockets/pluginproxy/
      - name: csi-attacher
        securityContext:
          privileged: true
          capabilities:
            add:
            - SYS_ADMIN
          allowPrivilegeEscalation: true
        image: registry.k8s.io/sig-storage/csi-attacher:v3.3.0
        args:
        - --v=5
        - --csi-address=$(ADDRESS)
        env:
        - name: ADDRESS
          value: /var/lib/csi/sockets/pluginproxy/csi.sock
        imagePullPolicy: Always
        volumeMounts:
        - name: socket-dir
          mountPath: /var/lib/csi/sockets/pluginproxy/
      - name: csi-resizer
        securityContext:
          privileged: true
          capabilities:
            add:
            - SYS_ADMIN
          allowPrivilegeEscalation: true
        image: registry.k8s.io/sig-storage/csi-resizer:v1.3.0
        args:
        - --v=5
        - --csi-address=$(ADDRESS)
        env:
        - name: ADDRESS
          value: /var/lib/csi/sockets/pluginproxy/csi.sock
        imagePullPolicy: Always
        volumeMounts:
        - name: socket-dir
          mountPath: /var/lib/csi/sockets/pluginproxy/
      - name: csi-plugin
        securityContext:
          privileged: true
          capabilities:
            add:
            - SYS_ADMIN
          allowPrivilegeEscalation: true
        image: synology/synology-csi:v1.1.3
        args:
        - --nodeid=NotUsed
        - --endpoint=$(CSI_ENDPOINT)
        - --client-info
        - /etc/synology/client-info.yml
        - --log-level=info
        env:
        - name: CSI_ENDPOINT
          value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: socket-dir
          mountPath: /var/lib/csi/sockets/pluginproxy/
        - name: client-info
          mountPath: /etc/synology
          readOnly: true
      volumes:
      - name: socket-dir
        emptyDir: {}
      - name: client-info
        secret:
          secretName: client-info-secret
---
apiVersion: storage.k8s.io/v1
kind: CSIDriver
metadata:
  name: csi.san.synology.com
  annotations:
    a8r.io/repository: https://github.com/Zebradil/myks-homelab
spec:
  attachRequired: true
  podInfoOnMount: true
  volumeLifecycleModes:
  - Persistent
---
apiVersion: v1
kind: Namespace
metadata:
  name: synology-csi
  annotations:
    a8r.io/repository: https://github.com/Zebradil/myks-homelab
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: csi-node-sa
  namespace: synology-csi
  annotations:
    a8r.io/repository: https://github.com/Zebradil/myks-homelab
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: synology-csi-node-role
  annotations:
    a8r.io/repository: https://github.com/Zebradil/myks-homelab
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - update
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - storage.k8s.io
  resources:
  - volumeattachments
  verbs:
  - get
  - list
  - watch
  - update
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: synology-csi-node-role
  namespace: synology-csi
  annotations:
    a8r.io/repository: https://github.com/Zebradil/myks-homelab
subjects:
- kind: ServiceAccount
  name: csi-node-sa
  namespace: synology-csi
roleRef:
  kind: ClusterRole
  name: synology-csi-node-role
  apiGroup: rbac.authorization.k8s.io
---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: synology-csi-node
  namespace: synology-csi
  annotations:
    a8r.io/repository: https://github.com/Zebradil/myks-homelab
spec:
  selector:
    matchLabels:
      app: synology-csi-node
  template:
    metadata:
      labels:
        app: synology-csi-node
    spec:
      serviceAccount: csi-node-sa
      hostNetwork: true
      containers:
      - name: csi-driver-registrar
        securityContext:
          privileged: true
        imagePullPolicy: Always
        image: registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.3.0
        args:
        - --v=5
        - --csi-address=$(ADDRESS)
        - --kubelet-registration-path=$(REGISTRATION_PATH)
        env:
        - name: ADDRESS
          value: /csi/csi.sock
        - name: REGISTRATION_PATH
          value: /var/lib/kubelet/plugins/csi.san.synology.com/csi.sock
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        volumeMounts:
        - name: plugin-dir
          mountPath: /csi
        - name: registration-dir
          mountPath: /registration
      - name: csi-plugin
        securityContext:
          privileged: true
        imagePullPolicy: IfNotPresent
        image: synology/synology-csi:v1.1.3
        args:
        - --nodeid=$(KUBE_NODE_NAME)
        - --endpoint=$(CSI_ENDPOINT)
        - --client-info
        - /etc/synology/client-info.yml
        - --log-level=info
        env:
        - name: CSI_ENDPOINT
          value: unix://csi/csi.sock
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        volumeMounts:
        - name: kubelet-dir
          mountPath: /var/lib/kubelet
          mountPropagation: Bidirectional
        - name: plugin-dir
          mountPath: /csi
        - name: client-info
          mountPath: /etc/synology
          readOnly: true
        - name: host-root
          mountPath: /host
        - name: device-dir
          mountPath: /dev
      volumes:
      - name: kubelet-dir
        hostPath:
          path: /var/lib/kubelet
          type: Directory
      - name: plugin-dir
        hostPath:
          path: /var/lib/kubelet/plugins/csi.san.synology.com/
          type: DirectoryOrCreate
      - name: registration-dir
        hostPath:
          path: /var/lib/kubelet/plugins_registry
          type: Directory
      - name: client-info
        secret:
          secretName: client-info-secret
      - name: host-root
        hostPath:
          path: /
          type: Directory
      - name: device-dir
        hostPath:
          path: /dev
          type: Directory
---
apiVersion: v1
kind: Secret
metadata:
  name: client-info-secret
  annotations:
    a8r.io/repository: https://github.com/Zebradil/myks-homelab
stringData:
  client-info.yml: |
    clients:
    - host: <path:static/dsm-1.sops.yaml#host>
      port: 5001
      https: true
      password: <path:static/dsm-1.sops.yaml#password>
      username: <path:static/dsm-1.sops.yaml#username>
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  annotations:
    storageclass.kubernetes.io/is-default-class: "true"
    a8r.io/repository: https://github.com/Zebradil/myks-homelab
  name: synology-iscsi-btrfs-retain-v1
allowVolumeExpansion: true
provisioner: csi.san.synology.com
reclaimPolicy: Retain
parameters:
  dsm: <path:static/dsm-1.sops.yaml#host>
  formatOptions: --nodiscard
  fsType: btrfs
  location: /volume3
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: synology-iscsi-btrfs-retain-media-v1
  annotations:
    a8r.io/repository: https://github.com/Zebradil/myks-homelab
allowVolumeExpansion: true
provisioner: csi.san.synology.com
reclaimPolicy: Retain
parameters:
  dsm: <path:static/dsm-1.sops.yaml#host>
  formatOptions: --nodiscard
  fsType: btrfs
  location: /volume1
